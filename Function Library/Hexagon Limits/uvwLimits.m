(* ::Package:: *)

irreducibleHexagonFunctionsToLineE[line_]:={H3[a_]:>toLineE[H3[a],line],H4[a_]:>toLineE[H4[a],line],H5[a_]:>toLineE[H5[a],line],H6[a_]:>toLineE[H6[a],line],E7[a_]:>toLineE[E7[a],line],O7[a_]:>toLineE[O7[a],line],Subscript[OverTilde[\[CapitalPhi]],6]:>toLineE[Subscript[OverTilde[\[CapitalPhi]],6],line],Superscript[\[CapitalOmega],"(2)"][a_,b_,c_]:>toLineE[Superscript[\[CapitalOmega],"(2)"][a,b,c],line],Subscript[F,1][s_,b_,c_]:>toLineE[Subscript[F,1][s,b,c],line],Subscript[H,1][s_,b_,c_]:>toLineE[Subscript[H,1][s,b,c],line],Subscript[J,1][s_,b_,c_]:>toLineE[Subscript[J,1][s,b,c],line],N:>toLineE[N,line],O:>toLineE[O,line],Subscript[M,1][s_,b_,c_]:>toLineE[Subscript[M,1][s,b,c],line],Subscript[Q,"ep"][a_,b_,c_]:>toLineE[Subscript[Q,"ep"][a,b,c],line],G:>toLineE[G,line],Subscript[K,1][a_,b_,c_]:>toLineE[Subscript[K,1][a,b,c],line]};
irreducibleHexagonFunctionsToSurfaceE[limit_]:={H3[a_]:>toSurfaceE[H3[a],limit],H4[a_]:>toSurfaceE[H4[a],limit],H5[a_]:>toSurfaceE[H5[a],limit],H6[a_]:>toSurfaceE[H6[a],limit],E7[a_]:>toSurfaceE[E7[a],limit],O7[a_]:>toSurfaceE[O7[a],limit],E8[a_]:>toSurfaceE[E7[a],limit],O8[a_]:>toSurfaceE[O7[a],limit],Subscript[OverTilde[\[CapitalPhi]],6]:>toSurfaceE[Subscript[OverTilde[\[CapitalPhi]],6],limit],Superscript[\[CapitalOmega],"(2)"][a_,b_,c_]:>toSurfaceE[Superscript[\[CapitalOmega],"(2)"][a,b,c],limit],Subscript[F,1][s_,b_,c_]:>toSurfaceE[Subscript[F,1][s,b,c],limit],Subscript[H,1][s_,b_,c_]:>toSurfaceE[Subscript[H,1][s,b,c],limit],Subscript[J,1][s_,b_,c_]:>toSurfaceE[Subscript[J,1][s,b,c],limit],N:>toSurfaceE[N,limit],O:>toSurfaceE[O,limit],Subscript[M,1][s_,b_,c_]:>toSurfaceE[Subscript[M,1][s,b,c],limit],Subscript[Q,"ep"][a_,b_,c_]:>toSurfaceE[Subscript[Q,"ep"][a,b,c],limit],G:>toSurfaceE[G,limit],Subscript[K,1][a_,b_,c_]:>toSurfaceE[Subscript[K,1][a,b,c],limit]};
irreducibleHexagonFunctionsToLineM[line_]:={H3[a_]:>toLineM[H3[a],line],H4[a_]:>toLineM[H4[a],line],H5[a_]:>toLineM[H5[a],line],H6[a_]:>toLineM[H6[a],line],E7[a_]:>toLineM[E7[a],line],O7[a_]:>toLineM[O7[a],line],Subscript[OverTilde[\[CapitalPhi]],6]:>toLineM[Subscript[OverTilde[\[CapitalPhi]],6],line],Superscript[\[CapitalOmega],"(2)"][a_,b_,c_]:>toLineM[Superscript[\[CapitalOmega],"(2)"][a,b,c],line],Subscript[F,1][s_,b_,c_]:>toLineM[Subscript[F,1][s,b,c],line],Subscript[H,1][s_,b_,c_]:>toLineM[Subscript[H,1][s,b,c],line],Subscript[J,1][s_,b_,c_]:>toLineM[Subscript[J,1][s,b,c],line],N:>toLineM[N,line],O:>toLineM[O,line],Subscript[M,1][s_,b_,c_]:>toLineM[Subscript[M,1][s,b,c],line],Subscript[Q,"ep"][a_,b_,c_]:>toLineM[Subscript[Q,"ep"][a,b,c],line],G:>toLineM[G,line],Subscript[K,1][a_,b_,c_]:>toLineM[Subscript[K,1][a,b,c],line]};

toLineE[H3[a_],line_]:=Module[{},toLineE[H3[temp1_],temp2_]=.;
  toLineE[H4[temp1_],temp2_]=.;
  toLineE[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon euclidean lines loaded"]];
  toLineE[H3[a],line]];
toLineE[H4[a_],line_]:=Module[{},toLineE[H3[temp1_],temp2_]=.;
  toLineE[H4[temp1_],temp2_]=.;
  toLineE[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon euclidean lines loaded"]];
  toLineE[H4[a],line]];
toLineE[H5[a_],line_]:=Module[{},toLineE[H3[temp1_],temp2_]=.;
  toLineE[H4[temp1_],temp2_]=.;
  toLineE[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon euclidean lines loaded"]];
  toLineE[H5[a],line]];
toLineE[H6[a_],line_]:=Module[{},toLineE[H6[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 hexagon euclidean lines loaded"]];
  toLineE[H6[a],line]];
toLineE[E7[a_],line_]:=Module[{},toLineE[E7[temp1_],temp2_]=.;
  toLineE[O7[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_euclidean_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 hexagon euclidean lines loaded"]];
  toLineE[E7[a],line]];
toLineE[O7[a_],line_]:=Module[{},toLineE[E7[temp1_],temp2_]=.;
  toLineE[O7[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_euclidean_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 hexagon euclidean lines loaded"]];
  toLineE[O7[a],line]];

toLineM[H3[a_],line_]:=Module[{},toLineM[H3[temp1_],temp2_]=.;
  toLineM[H4[temp1_],temp2_]=.;
  toLineM[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_minkowski_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon minkowski lines loaded"]];
  toLineM[H3[a],line]];
toLineM[H4[a_],line_]:=Module[{},toLineM[H3[temp1_],temp2_]=.;
  toLineM[H4[temp1_],temp2_]=.;
  toLineM[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_minkowski_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon minkowski lines loaded"]];
  toLineM[H4[a],line]];
toLineM[H5[a_],line_]:=Module[{},toLineM[H3[temp1_],temp2_]=.;
  toLineM[H4[temp1_],temp2_]=.;
  toLineM[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_minkowski_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon minkowski lines loaded"]];
  toLineM[H5[a],line]];
toLineM[H6[a_],line_]:=Module[{},toLineM[H6[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_minkowski_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 hexagon minkowski lines loaded"]];
  toLineM[H6[a],line]];
toLineM[E7[a_],line_]:=Module[{},toLineM[E7[temp1_],temp2_]=.;
  toLineM[O7[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_minkowski_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 hexagon minkowski lines loaded"]];
  toLineM[E7[a],line]];
toLineM[O7[a_],line_]:=Module[{},toLineM[E7[temp1_],temp2_]=.;
  toLineM[O7[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_minkowski_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 hexagon minkowski lines loaded"]];
  toLineM[O7[a],line]];

toSurfaceE[H3[a_],line_]:=Module[{},toSurfaceE[H3[temp1_],temp2_]=.;
  toSurfaceE[H4[temp1_],temp2_]=.;
  toSurfaceE[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon euclidean surfaces loaded"]];
  toSurfaceE[H3[a],line]];
toSurfaceE[H4[a_],line_]:=Module[{},toSurfaceE[H3[temp1_],temp2_]=.;
  toSurfaceE[H4[temp1_],temp2_]=.;
  toSurfaceE[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon euclidean surfaces loaded"]];
  toSurfaceE[H4[a],line]];
toSurfaceE[H5[a_],line_]:=Module[{},toSurfaceE[H3[temp1_],temp2_]=.;
  toSurfaceE[H4[temp1_],temp2_]=.;
  toSurfaceE[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon euclidean surfaces loaded"]];
  toSurfaceE[H5[a],line]];
toSurfaceE[H6[a_],line_]:=Module[{},toSurfaceE[H6[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 hexagon euclidean surfaces loaded"]];
  toSurfaceE[H6[a],line]];
toSurfaceE[E7[a_],line_]:=Module[{},toSurfaceE[E7[temp1_],temp2_]=.;
  toSurfaceE[O7[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_euclidean_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 hexagon euclidean surfaces loaded"]];
  toSurfaceE[E7[a],line]];
toSurfaceE[O7[a_],line_]:=Module[{},toSurfaceE[E7[temp1_],temp2_]=.;
  toSurfaceE[O7[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_euclidean_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 hexagon euclidean surfaces loaded"]];
  toSurfaceE[O7[a],line]];

toSurfaceM[H3[a_],line_]:=Module[{},toSurfaceM[H3[temp1_],temp2_]=.;
  toSurfaceM[H4[temp1_],temp2_]=.;
  toSurfaceM[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_minkowski_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon minkowski surfaces loaded"]];
  toSurfaceM[H3[a],line]];
toSurfaceM[H4[a_],line_]:=Module[{},toSurfaceM[H3[temp1_],temp2_]=.;
  toSurfaceM[H4[temp1_],temp2_]=.;
  toSurfaceM[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_minkowski_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon minkowski surfaces loaded"]];
  toSurfaceM[H4[a],line]];
toSurfaceM[H5[a_],line_]:=Module[{},toSurfaceM[H3[temp1_],temp2_]=.;
  toSurfaceM[H4[temp1_],temp2_]=.;
  toSurfaceM[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_minkowski_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon minkowski surfaces loaded"]];
  toSurfaceM[H5[a],line]];
toSurfaceM[H6[a_],line_]:=Module[{},toSurfaceM[H6[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_minkowski_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 hexagon minkowski surfaces loaded"]];
  toSurfaceM[H6[a],line]];
toSurfaceM[E7[a_],line_]:=Module[{},toSurfaceM[E7[temp1_],temp2_]=.;
  toSurfaceM[O7[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_minkowski_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 hexagon minkowski surfaces loaded"]];
  toSurfaceM[E7[a],line]];
toSurfaceM[O7[a_],line_]:=Module[{},toSurfaceM[E7[temp1_],temp2_]=.;
  toSurfaceM[O7[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_minkowski_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 hexagon minkowski surfaces loaded"]];
  toSurfaceM[O7[a],line]];

toLineE[func_,{u,1,1}]:=Expand[IntegrateHPL[Simplify[coproductD[func,u]/.irreducibleFunctionsToLineE[{u,1,1}]/.replace\[CapitalDelta]/.v->1/.w->1,1>u>0],{u,1,u}]]-If[MatchQ[func,Superscript[\[CapitalOmega],"(2)"][_,_,_]],6\[Zeta][4],0]/;!MatchQ[func,Join[Alternatives[Plus[_,__],Times[__,Alternatives@allIrreducibleFunctions],Times[const_,zeta_]/;NumericQ[const]\[And]MatchQ[zeta,pureMZV]],pureMZV]];
toLineE[func_,{1,v,1}]:=Expand[IntegrateHPL[Simplify[coproductD[func,v]/.irreducibleFunctionsToLineE[{1,v,1}]/.replace\[CapitalDelta]/.u->1/.w->1,1>v>0],{v,1,v}]]-If[MatchQ[func,Superscript[\[CapitalOmega],"(2)"][_,_,_]],6\[Zeta][4],0]/;!MatchQ[func,Join[Alternatives[Plus[_,__],Times[__,Alternatives@allIrreducibleFunctions],Times[const_,zeta_]/;NumericQ[const]\[And]MatchQ[zeta,pureMZV]],pureMZV]];
toLineE[func_,{1,1,w}]:=Expand[IntegrateHPL[Simplify[coproductD[func,w]/.irreducibleFunctionsToLineE[{1,1,w}]/.replace\[CapitalDelta]/.u->1/.v->1,1>w>0],{w,1,w}]]-If[MatchQ[func,Superscript[\[CapitalOmega],"(2)"][_,_,_]],6\[Zeta][4],0]/;!MatchQ[func,Join[Alternatives[Plus[_,__],Times[__,Alternatives@allIrreducibleFunctions],Times[const_,zeta_]/;NumericQ[const]\[And]MatchQ[zeta,pureMZV]],pureMZV]];
toLineE[func_,{u,u,1}]:=Module[{functionalForm},functionalForm=IntegrateHPL[ReplaceAll[(coproductEntry[func,u]+coproductEntry[func,v])/u-(coproductEntry[func,1-u]+coproductEntry[func,1-v])/(1-u),irreducibleFunctionsToLineE[{u,u,1}]]/.{v->u}/.toHPL/.flipArgument[w]/.{1-w->Subscript[\[Xi],w]}/.{HPL[{___,1},Subscript[\[Xi],w]]->0},{u,0,u}]; functionalForm-ReplaceAll[functionalForm/.flipArgument[u]/.{1-u->Subscript[\[Xi],u]},HPL[{___,1},Subscript[\[Xi],u]]->0]-If[MatchQ[func,Superscript[\[CapitalOmega],"(2)"][_,_,_]],6\[Zeta][4],0]]/;!MatchQ[func,Join[Alternatives[Plus[_,__],Times[__,Alternatives@allIrreducibleFunctions],Times[const_,zeta_]/;NumericQ[const]\[And]MatchQ[zeta,pureMZV]],pureMZV]];
toLineE[func_,{1,v,v}]:=Module[{functionalForm},functionalForm=IntegrateHPL[ReplaceAll[(coproductEntry[func,v]+coproductEntry[func,w])/v-(coproductEntry[func,1-v]+coproductEntry[func,1-w])/(1-v),irreducibleFunctionsToLineE[{1,v,v}]]/.{w->v}/.toHPL/.flipArgument[u]/.{1-u->Subscript[\[Xi],u]}/.{HPL[{___,1},Subscript[\[Xi],u]]->0},{v,0,v}]; functionalForm-ReplaceAll[functionalForm/.flipArgument[v]/.{1-v->Subscript[\[Xi],v]},HPL[{___,1},Subscript[\[Xi],v]]->0]-If[MatchQ[func,Superscript[\[CapitalOmega],"(2)"][_,_,_]],6\[Zeta][4],0]]/;!MatchQ[func,Join[Alternatives[Plus[_,__],Times[__,Alternatives@allIrreducibleFunctions],Times[const_,zeta_]/;NumericQ[const]\[And]MatchQ[zeta,pureMZV]],pureMZV]];
toLineE[func_,{w,1,w}]:=Module[{functionalForm},functionalForm=IntegrateHPL[ReplaceAll[(coproductEntry[func,w]+coproductEntry[func,u])/w-(coproductEntry[func,1-w]+coproductEntry[func,1-u])/(1-w),irreducibleFunctionsToLineE[{w,1,w}]]/.{u->w}/.toHPL/.flipArgument[v]/.{1-v->Subscript[\[Xi],v]}/.{HPL[{___,1},Subscript[\[Xi],v]]->0},{w,0,w}]; functionalForm-ReplaceAll[functionalForm/.flipArgument[w]/.{1-w->Subscript[\[Xi],w]},HPL[{___,1},Subscript[\[Xi],w]]->0]-If[MatchQ[func,Superscript[\[CapitalOmega],"(2)"][_,_,_]],6\[Zeta][4],0]]/;!MatchQ[func,Join[Alternatives[Plus[_,__],Times[__,Alternatives@allIrreducibleFunctions],Times[const_,zeta_]/;NumericQ[const]\[And]MatchQ[zeta,pureMZV]],pureMZV]];
toLineE[func_,{u,0,1-u}]:=toPointE[func,{1,v,v},v->0]+Expand[IntegrateHPL[Expand[(coproductEntry[func,u]+coproductEntry[func,yu])/u+(-coproductEntry[func,w]-coproductEntry[func,yw])/w+(-coproductEntry[func,1-u]-coproductEntry[func,yv]+coproductEntry[func,yw])/(1-u)+(coproductEntry[func,1-w]-coproductEntry[func,yu]+coproductEntry[func,yv])/(1-w)]/.irreducibleFunctionsToLineE[{u,0,1-u}]/.{w->(1-u)}/.toHPL/.flipArgument[{1-u,1-v,1-w}]/.HPL[{___,1},v]->0,{u,1-Subscript[\[Xi],u],u}]/.flipArgument[1-Subscript[\[Xi],u]]/.{HPL[{___,1},Subscript[\[Xi],u]]->0,HPL[{0},Subscript[\[Xi],u]]->Log[Subscript[\[Xi],u]]}];
toLineE[func_,{1-v,v,0}]:=toPointE[func,{w,1,w},w->0]+Expand[IntegrateHPL[Expand[(coproductEntry[func,v]+coproductEntry[func,yv])/v+(-coproductEntry[func,u]-coproductEntry[func,yu])/u+(-coproductEntry[func,1-v]-coproductEntry[func,yw]+coproductEntry[func,yu])/(1-v)+(coproductEntry[func,1-u]-coproductEntry[func,yv]+coproductEntry[func,yw])/(1-u)]/.irreducibleFunctionsToLineE[{1-v,v,0}]/.{u->(1-v)}/.toHPL/.flipArgument[{1-u,1-v,1-w}]/.HPL[{___,1},w]->0,{v,1-Subscript[\[Xi],v],v}]/.flipArgument[1-Subscript[\[Xi],v]]/.{HPL[{___,1},Subscript[\[Xi],v]]->0,HPL[{0},Subscript[\[Xi],v]]->Log[Subscript[\[Xi],v]]}];
toLineE[func_,{0,1-w,w}]:=toPointE[func,{u,u,1},u->0]+Expand[IntegrateHPL[Expand[(coproductEntry[func,w]+coproductEntry[func,yw])/w+(-coproductEntry[func,v]-coproductEntry[func,yv])/v+(-coproductEntry[func,1-w]-coproductEntry[func,yu]+coproductEntry[func,yv])/(1-w)+(coproductEntry[func,1-v]-coproductEntry[func,yw]+coproductEntry[func,yu])/(1-v)]/.irreducibleFunctionsToLineE[{0,1-w,w}]/.{v->(1-w)}/.toHPL/.flipArgument[{1-u,1-v,1-w}]/.HPL[{___,1},u]->0,{w,1-Subscript[\[Xi],w],w}]/.flipArgument[1-Subscript[\[Xi],w]]/.{HPL[{___,1},Subscript[\[Xi],w]]->0,HPL[{0},Subscript[\[Xi],w]]->Log[Subscript[\[Xi],w]]}];

toSurfaceE[func_,v->0]:=Expand[func/.irreducibleFunctionsToSurfaceE[v->0]/.flipArgument[1-v]/.{HPL[{___,1},v]->0,HPL[{0},v]->Log[v]}];

toLineM[func_,{u,1,1}]:=Expand[toLineE[func,{u,1,1}]/.{HPL[{0},u]->HPL[{0},u]-2Pi*I}];
toLineM[func_,{1,v,1}]:=Expand[toLineE[func,{1,v,1}]/.{HPL[{0},v]->HPL[{0},v]-2Pi*I}];
toLineM[func_,{1,1,w}]:=Expand[toLineE[func,{1,1,w}]/.{HPL[{0},w]->HPL[{0},w]-2Pi*I}];
toLineM[func_,{u,u,1}]:=Module[{functionalForm},functionalForm=IntegrateHPL[Expand[(coproductEntry[func,u]+coproductEntry[func,v])/u-(coproductEntry[func,1-u]+coproductEntry[func,1-v])/(1-u)]/.toHPL/.flipArgument[1-w]/.{HPL[{0},w]->HPL[{0},w]-2Pi I}/.flipArgument[w]/.irreducibleFunctionsToLineM[{u,u,1}]/.{v->u}/.flipArgument[w]/.{1-w->Subscript[\[Xi],w]}/.{HPL[{___,1},Subscript[\[Xi],w]]->0},{u,0,u}]; functionalForm-ReplaceAll[functionalForm/.flipArgument[u]/.{1-u->Subscript[\[Xi],u]},HPL[{___,1},Subscript[\[Xi],u]]->0]+toPointM[func,{1,1,w},w->1]];
toLineM[func_,{1,v,v}]:=Module[{functionalForm},functionalForm=IntegrateHPL[Expand[(coproductEntry[func,v]+coproductEntry[func,w])/v-(coproductEntry[func,1-v]+coproductEntry[func,1-w])/(1-v)]/.toHPL/.flipArgument[1-u]/.{HPL[{0},u]->HPL[{0},u]-2Pi I}/.flipArgument[u]/.irreducibleFunctionsToLineM[{1,v,v}]/.{w->v}/.flipArgument[u]/.{1-u->Subscript[\[Xi],u]}/.{HPL[{___,1},Subscript[\[Xi],u]]->0},{v,0,v}]; functionalForm-ReplaceAll[functionalForm/.flipArgument[v]/.{1-v->Subscript[\[Xi],v]},HPL[{___,1},Subscript[\[Xi],v]]->0]+toPointM[func,{u,1,1},u->1]];
toLineM[func_,{w,1,w}]:=Module[{functionalForm},functionalForm=IntegrateHPL[Expand[(coproductEntry[func,w]+coproductEntry[func,u])/w-(coproductEntry[func,1-w]+coproductEntry[func,1-u])/(1-w)]/.toHPL/.flipArgument[1-v]/.{HPL[{0},v]->HPL[{0},v]-2Pi I}/.flipArgument[v]/.irreducibleFunctionsToLineM[{w,1,w}]/.{u->w}/.flipArgument[v]/.{1-v->Subscript[\[Xi],v]}/.{HPL[{___,1},Subscript[\[Xi],v]]->0},{w,0,w}]; functionalForm-ReplaceAll[functionalForm/.flipArgument[w]/.{1-w->Subscript[\[Xi],w]},HPL[{___,1},Subscript[\[Xi],w]]->0]+toPointM[func,{1,v,1},v->1]];

toPointE[func_,{u,u,1},u->0]:=Expand[toLineE[func,{u,u,1}]/.{Subscript[\[Xi],u]->1-u}/.flipArgument[1-u]/.{HPL[{___,1},u]->0}];
toPointE[func_,{1,v,v},v->0]:=Expand[toLineE[func,{1,v,v}]/.{Subscript[\[Xi],v]->1-v}/.flipArgument[1-v]/.{HPL[{___,1},v]->0}];
toPointE[func_,{w,1,w},w->0]:=Expand[toLineE[func,{w,1,w}]/.{Subscript[\[Xi],w]->1-w}/.flipArgument[1-w]/.{HPL[{___,1},w]->0}];

toPointM[func_,{u,1,1},u->1]:=Expand[lineM[func,{u,1,1}]/.flipArgument[u]/.{1-u->Subscript[\[Xi],u]}/.HPL[{___,1},Subscript[\[Xi],u]]->0];
toPointM[func_,{1,v,1},v->1]:=Expand[lineM[func,{1,v,1}]/.flipArgument[v]/.{1-v->Subscript[\[Xi],v]}/.HPL[{___,1},Subscript[\[Xi],v]]->0];
toPointM[func_,{1,1,w},w->1]:=Expand[lineM[func,{1,1,w}]/.flipArgument[w]/.{1-w->Subscript[\[Xi],w]}/.HPL[{___,1},Subscript[\[Xi],w]]->0];
toPointM[func_,{u,u,1},u->0]:=Expand[lineM[func,{u,u,1}]/.{HPL[{___,1},u]->0}];
toPointM[func_,{1,v,v},v->0]:=Expand[lineM[func,{1,v,v}]/.{HPL[{___,1},v]->0}];
toPointM[func_,{w,1,w},w->0]:=Expand[lineM[func,{w,1,w}]/.{HPL[{___,1},w]->0}];
