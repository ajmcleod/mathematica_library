(* ::Package:: *)

irreduciblesToLineE[line_]:=func_:>optimizeReplacementIrreduciblesToLineE[func,line]
optimizeReplacementIrreduciblesToLineE[func_,line_]:=Module[{functionsAppearing,letters},
    functionsAppearing=DeleteDuplicates[Table[If[!FreeQ[func,functionType],functionType,{}],{functionType,Join[Table[Symbol["H"<>ToString[ii]],{ii,3,6}],Table[Symbol["E"<>ToString[ii]],{ii,7,8}],Table[Symbol["O"<>ToString[ii]],{ii,7,8}],Table[Symbol["DS"<>ToString[ii]],{ii,3,8}],Table[Symbol["SP"<>ToString[ii]],{ii,2,8}],Table[Symbol["DT"<>ToString[ii]],{ii,3,8}]]}]/.<|H3->H5,H4->H5,DS3->DS5,DS4->DS5,SP2->SP5,SP3->SP5,SP4->SP5,DT3->DT5,DT4->DT5|>];
    Expand[func/.Join@@Table[Symbol[ToString[ii]<>"toLineE"][line],{ii,functionsAppearing}]]]

irreducibleFunctionsToLineE[line_]:={H3[a_]:>toLineE[H3[a],line],H4[a_]:>toLineE[H4[a],line],H5[a_]:>toLineE[H5[a],line],H6[a_]:>toLineE[H6[a],line],E7[a_]:>toLineE[E7[a],line],O7[a_]:>toLineE[O7[a],line],E8[a_]:>toLineE[E8[a],line],O8[a_]:>toLineE[O8[a],line],DS3[a_]:>toLineE[DS3[a],line],DS4[a_]:>toLineE[DS4[a],line],DS5[a_]:>toLineE[DS5[a],line],DS6[a_]:>toLineE[DS6[a],line],DS7[a_]:>toLineE[DS7[a],line],DS8[a_]:>toLineE[DS8[a],line],DS9[a_]:>toLineE[DS9[a],line],DS10[a_]:>toLineE[DS10[a],line],DT3[a_]:>toLineE[DT3[a],line],DT4[a_]:>toLineE[DT4[a],line],DT5[a_]:>toLineE[DT5[a],line],DT6[a_]:>toLineE[DT6[a],line],DT7[a_]:>toLineE[DT7[a],line],DT8[a_]:>toLineE[DT8[a],line],DT9[a_]:>toLineE[DT9[a],line],DT10[a_]:>toLineE[DT10[a],line],Subscript[OverTilde[\[CapitalPhi]],6]:>toLineE[Subscript[OverTilde[\[CapitalPhi]],6],line],Superscript[\[CapitalOmega],"(2)"][a_,b_,c_]:>toLineE[Superscript[\[CapitalOmega],"(2)"][a,b,c],line],Subscript[F,1][s_,b_,c_]:>toLineE[Subscript[F,1][s,b,c],line],Subscript[H,1][s_,b_,c_]:>toLineE[Subscript[H,1][s,b,c],line],Subscript[J,1][s_,b_,c_]:>toLineE[Subscript[J,1][s,b,c],line],N:>toLineE[N,line],O:>toLineE[O,line],Subscript[M,1][s_,b_,c_]:>toLineE[Subscript[M,1][s,b,c],line],Subscript[Q,"ep"][a_,b_,c_]:>toLineE[Subscript[Q,"ep"][a,b,c],line],G:>toLineE[G,line],Subscript[K,1][a_,b_,c_]:>toLineE[Subscript[K,1][a,b,c],line]};
irreducibleHexagonFunctionsToSurfaceE[limit_]:={H3[a_]:>toSurfaceE[H3[a],limit],H4[a_]:>toSurfaceE[H4[a],limit],H5[a_]:>toSurfaceE[H5[a],limit],H6[a_]:>toSurfaceE[H6[a],limit],E7[a_]:>toSurfaceE[E7[a],limit],O7[a_]:>toSurfaceE[O7[a],limit],E8[a_]:>toSurfaceE[E8[a],limit],O8[a_]:>toSurfaceE[O8[a],limit],Subscript[OverTilde[\[CapitalPhi]],6]:>toSurfaceE[Subscript[OverTilde[\[CapitalPhi]],6],limit],Superscript[\[CapitalOmega],"(2)"][a_,b_,c_]:>toSurfaceE[Superscript[\[CapitalOmega],"(2)"][a,b,c],limit],Subscript[F,1][s_,b_,c_]:>toSurfaceE[Subscript[F,1][s,b,c],limit],Subscript[H,1][s_,b_,c_]:>toSurfaceE[Subscript[H,1][s,b,c],limit],Subscript[J,1][s_,b_,c_]:>toSurfaceE[Subscript[J,1][s,b,c],limit],N:>toSurfaceE[N,limit],O:>toSurfaceE[O,limit],Subscript[M,1][s_,b_,c_]:>toSurfaceE[Subscript[M,1][s,b,c],limit],Subscript[Q,"ep"][a_,b_,c_]:>toSurfaceE[Subscript[Q,"ep"][a,b,c],limit],G:>toSurfaceE[G,limit],Subscript[K,1][a_,b_,c_]:>toSurfaceE[Subscript[K,1][a,b,c],limit]};
irreducibleHexagonFunctionsToLineM[line_]:={H3[a_]:>toLineM[H3[a],line],H4[a_]:>toLineM[H4[a],line],H5[a_]:>toLineM[H5[a],line],H6[a_]:>toLineM[H6[a],line],E7[a_]:>toLineM[E7[a],line],O7[a_]:>toLineM[O7[a],line],E8[a_]:>toLineM[E8[a],line],O8[a_]:>toLineM[O8[a],line],Subscript[OverTilde[\[CapitalPhi]],6]:>toLineM[Subscript[OverTilde[\[CapitalPhi]],6],line],Superscript[\[CapitalOmega],"(2)"][a_,b_,c_]:>toLineM[Superscript[\[CapitalOmega],"(2)"][a,b,c],line],Subscript[F,1][s_,b_,c_]:>toLineM[Subscript[F,1][s,b,c],line],Subscript[H,1][s_,b_,c_]:>toLineM[Subscript[H,1][s,b,c],line],Subscript[J,1][s_,b_,c_]:>toLineM[Subscript[J,1][s,b,c],line],N:>toLineM[N,line],O:>toLineM[O,line],Subscript[M,1][s_,b_,c_]:>toLineM[Subscript[M,1][s,b,c],line],Subscript[Q,"ep"][a_,b_,c_]:>toLineM[Subscript[Q,"ep"][a,b,c],line],G:>toLineM[G,line],Subscript[K,1][a_,b_,c_]:>toLineM[Subscript[K,1][a,b,c],line]};

toLineEc[func_,{u,1,1}]:=Expand[IntegrateHPL[Simplify[coproductD[func,u]/.irreducibleHexagonFunctionsToLineE[{u,1,1}]/.replace\[CapitalDelta]/.{v->1,w->1},1>u>0],{u,1,u}]]-If[MatchQ[func,Superscript[\[CapitalOmega],"(2)"][_,_,_]],6\[Zeta][4],0]/;!MatchQ[func,Join[Alternatives[Plus[_,__],Times[__,Alternatives@allIrreducibleFunctions],Times[const_,zeta_]/;NumericQ[const]\[And]MatchQ[zeta,pureMZV]],pureMZV]];
toLineEc[func_,{1,v,1}]:=Expand[IntegrateHPL[Simplify[coproductD[func,v]/.irreducibleHexagonFunctionsToLineE[{1,v,1}]/.replace\[CapitalDelta]/.{u->1,w->1},1>v>0],{v,1,v}]]-If[MatchQ[func,Superscript[\[CapitalOmega],"(2)"][_,_,_]],6\[Zeta][4],0]/;!MatchQ[func,Join[Alternatives[Plus[_,__],Times[__,Alternatives@allIrreducibleFunctions],Times[const_,zeta_]/;NumericQ[const]\[And]MatchQ[zeta,pureMZV]],pureMZV]];
toLineEc[func_,{1,1,w}]:=Expand[IntegrateHPL[Simplify[coproductD[func,w]/.irreducibleHexagonFunctionsToLineE[{1,1,w}]/.replace\[CapitalDelta]/.{u->1,v->1},1>w>0],{w,1,w}]]-If[MatchQ[func,Superscript[\[CapitalOmega],"(2)"][_,_,_]],6\[Zeta][4],0]/;!MatchQ[func,Join[Alternatives[Plus[_,__],Times[__,Alternatives@allIrreducibleFunctions],Times[const_,zeta_]/;NumericQ[const]\[And]MatchQ[zeta,pureMZV]],pureMZV]];
toLineEc[func_,{u,u,1}]:=Module[{functionalForm},functionalForm=IntegrateHPL[((coproductEntry[func,u]+coproductEntry[func,v])/u-(coproductEntry[func,1-u]+coproductEntry[func,1-v])/(1-u))/.irreducibleHexagonFunctionsToLineE[{u,u,1}]/.{v->u}/.HPL[{___,1},1-w]->0,{u,0,u}]; functionalForm-Expand[functionalForm/.flipArgument[u]/.HPL[{___,1},1-u]->0]-If[MatchQ[func,Superscript[\[CapitalOmega],"(2)"][_,_,_]],6\[Zeta][4],0]]/;!MatchQ[func,Join[Alternatives[Plus[_,__],Times[__,Alternatives@allIrreducibleFunctions],Times[const_,zeta_]/;NumericQ[const]\[And]MatchQ[zeta,pureMZV]],pureMZV]];
toLineEc[func_,{1,v,v}]:=Module[{functionalForm},functionalForm=IntegrateHPL[((coproductEntry[func,v]+coproductEntry[func,w])/v-(coproductEntry[func,1-v]+coproductEntry[func,1-w])/(1-v))/.irreducibleHexagonFunctionsToLineE[{1,v,v}]/.{w->v}/.HPL[{___,1},1-u]->0,{v,0,v}]; functionalForm-Expand[functionalForm/.flipArgument[v]/.HPL[{___,1},1-v]->0]-If[MatchQ[func,Superscript[\[CapitalOmega],"(2)"][_,_,_]],6\[Zeta][4],0]]/;!MatchQ[func,Join[Alternatives[Plus[_,__],Times[__,Alternatives@allIrreducibleFunctions],Times[const_,zeta_]/;NumericQ[const]\[And]MatchQ[zeta,pureMZV]],pureMZV]];
toLineEc[func_,{w,1,w}]:=Module[{functionalForm},functionalForm=IntegrateHPL[((coproductEntry[func,w]+coproductEntry[func,u])/w-(coproductEntry[func,1-w]+coproductEntry[func,1-u])/(1-w))/.irreducibleHexagonFunctionsToLineE[{w,1,w}]/.{u->w}/.HPL[{___,1},1-v]->0,{w,0,w}]; functionalForm-Expand[functionalForm/.flipArgument[w]/.HPL[{___,1},1-w]->0]-If[MatchQ[func,Superscript[\[CapitalOmega],"(2)"][_,_,_]],6\[Zeta][4],0]]/;!MatchQ[func,Join[Alternatives[Plus[_,__],Times[__,Alternatives@allIrreducibleFunctions],Times[const_,zeta_]/;NumericQ[const]\[And]MatchQ[zeta,pureMZV]],pureMZV]];
toLineEc[func_,{u,0,1-u}]:=Expand[(toLineE[func,{1,0,w}]/.flipArgument[1-w]/.{HPL[{___,1},w]->0,HPL[{0},w]->-HPL[{1},u]})+IntegrateHPL[Expand[(coproductEntry[func,u]+coproductEntry[func,1-w]+coproductEntry[func,yv])/u-(coproductEntry[func,w]+coproductEntry[func,1-u]+coproductEntry[func,yv])/(1-u)]/.irreducibleHexagonFunctionsToLineE[{u,0,1-u}]/.w->(1-u)/.flipArgument[1-v]/.HPL[{___,1},v]->0/.flipArgument[1-u],{u,u->1,u}]]/.HPL[{0},v]->Log[v];

toPointE[func_,{u,u,1},u->0]:=Expand[toLineE[func,{u,u,1}]/.flipArgument[1-u]/.{HPL[{___,1},u]->0}];
toPointE[func_,{1,v,v},v->0]:=Expand[toLineE[func,{1,v,v}]/.flipArgument[1-v]/.{HPL[{___,1},v]->0}];
toPointE[func_,{w,1,w},w->0]:=Expand[toLineE[func,{w,1,w}]/.flipArgument[1-w]/.{HPL[{___,1},w]->0}];

toLineM[func_,{u,1,1}]:=Expand[toLineE[func,{u,1,1}]/.{HPL[{0},u]->HPL[{0},u]-2Pi*I}];
toLineM[func_,{1,v,1}]:=Expand[toLineE[func,{1,v,1}]/.{HPL[{0},v]->HPL[{0},v]-2Pi*I}];
toLineM[func_,{1,1,w}]:=Expand[toLineE[func,{1,1,w}]/.{HPL[{0},w]->HPL[{0},w]-2Pi*I}];
toLineM[func_,{u,u,1}]:=Module[{functionalForm},functionalForm=IntegrateHPL[Expand[(coproductEntry[func,u]+coproductEntry[func,v])/u-(coproductEntry[func,1-u]+coproductEntry[func,1-v])/(1-u)]/.toHPL/.flipArgument[1-w]/.{HPL[{0},w]->HPL[{0},w]-2Pi I}/.flipArgument[w]/.irreducibleFunctionsToLineM[{u,u,1}]/.{v->u}/.flipArgument[w]/.{1-w->Subscript[\[Xi],w]}/.{HPL[{___,1},Subscript[\[Xi],w]]->0},{u,0,u}]; functionalForm-ReplaceAll[functionalForm/.flipArgument[u]/.{1-u->Subscript[\[Xi],u]},HPL[{___,1},Subscript[\[Xi],u]]->0]+toPointM[func,{1,1,w},w->1]];
toLineM[func_,{1,v,v}]:=Module[{functionalForm},functionalForm=IntegrateHPL[Expand[(coproductEntry[func,v]+coproductEntry[func,w])/v-(coproductEntry[func,1-v]+coproductEntry[func,1-w])/(1-v)]/.toHPL/.flipArgument[1-u]/.{HPL[{0},u]->HPL[{0},u]-2Pi I}/.flipArgument[u]/.irreducibleFunctionsToLineM[{1,v,v}]/.{w->v}/.flipArgument[u]/.{1-u->Subscript[\[Xi],u]}/.{HPL[{___,1},Subscript[\[Xi],u]]->0},{v,0,v}]; functionalForm-ReplaceAll[functionalForm/.flipArgument[v]/.{1-v->Subscript[\[Xi],v]},HPL[{___,1},Subscript[\[Xi],v]]->0]+toPointM[func,{u,1,1},u->1]];
toLineM[func_,{w,1,w}]:=Module[{functionalForm},functionalForm=IntegrateHPL[Expand[(coproductEntry[func,w]+coproductEntry[func,u])/w-(coproductEntry[func,1-w]+coproductEntry[func,1-u])/(1-w)]/.toHPL/.flipArgument[1-v]/.{HPL[{0},v]->HPL[{0},v]-2Pi I}/.flipArgument[v]/.irreducibleFunctionsToLineM[{w,1,w}]/.{u->w}/.flipArgument[v]/.{1-v->Subscript[\[Xi],v]}/.{HPL[{___,1},Subscript[\[Xi],v]]->0},{w,0,w}]; functionalForm-ReplaceAll[functionalForm/.flipArgument[w]/.{1-w->Subscript[\[Xi],w]},HPL[{___,1},Subscript[\[Xi],w]]->0]+toPointM[func,{1,v,1},v->1]];

toPointM[func_,{u,1,1},u->1]:=Expand[lineM[func,{u,1,1}]/.flipArgument[u]/.{1-u->Subscript[\[Xi],u]}/.HPL[{___,1},Subscript[\[Xi],u]]->0];
toPointM[func_,{1,v,1},v->1]:=Expand[lineM[func,{1,v,1}]/.flipArgument[v]/.{1-v->Subscript[\[Xi],v]}/.HPL[{___,1},Subscript[\[Xi],v]]->0];
toPointM[func_,{1,1,w},w->1]:=Expand[lineM[func,{1,1,w}]/.flipArgument[w]/.{1-w->Subscript[\[Xi],w]}/.HPL[{___,1},Subscript[\[Xi],w]]->0];
toPointM[func_,{u,u,1},u->0]:=Expand[lineM[func,{u,u,1}]/.{HPL[{___,1},u]->0}];
toPointM[func_,{1,v,v},v->0]:=Expand[lineM[func,{1,v,v}]/.{HPL[{___,1},v]->0}];
toPointM[func_,{w,1,w},w->0]:=Expand[lineM[func,{w,1,w}]/.{HPL[{___,1},w]->0}];

toLineE[H3[a_],{u,1,1}]:=Module[{},toLineE[H3[temp1_],{u,1,1}]=.;
  toLineE[H4[temp1_],{u,1,1}]=.;
  toLineE[H5[temp1_],{u,1,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_u11_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 u11 euclidean lines loaded"]];
  toLineE[H3[a],{u,1,1}]];
toLineE[H4[a_],{u,1,1}]:=Module[{},toLineE[H3[temp1_],{u,1,1}]=.;
  toLineE[H4[temp1_],{u,1,1}]=.;
  toLineE[H5[temp1_],{u,1,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_u11_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 u11 euclidean lines loaded"]];
  toLineE[H4[a],{u,1,1}]];
toLineE[H5[a_],{u,1,1}]:=Module[{},toLineE[H3[temp1_],{u,1,1}]=.;
  toLineE[H4[temp1_],{u,1,1}]=.;
  toLineE[H5[temp1_],{u,1,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_u11_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 u11 euclidean lines loaded"]];
  toLineE[H5[a],{u,1,1}]];
toLineE[H6[a_],{u,1,1}]:=Module[{},toLineE[H6[temp1_],{u,1,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_u11_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 u11 euclidean lines loaded"]];
  toLineE[H6[a],{u,1,1}]];
toLineE[E7[a_],{u,1,1}]:=Module[{},toLineE[E7[temp1_],{u,1,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_u11_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even u11 euclidean lines loaded"]];
  toLineE[E7[a],{u,1,1}]];
toLineE[O7[a_],{u,1,1}]:=Module[{},toLineE[O7[temp1_],{u,1,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_odd_euclidean_u11_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 odd u11 euclidean lines loaded"]];
  toLineE[O7[a],{u,1,1}]];
toLineE[E8[a_],{u,1,1}]:=Module[{},toLineE[E8[temp1_],{u,1,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_u11_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even u11 euclidean lines loaded"]];
  toLineE[E8[a],{u,1,1}]];
toLineE[O8[a_],{u,1,1}]:=Module[{},toLineE[O8[temp1_],{u,1,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_odd_euclidean_u11_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 odd u11 euclidean lines loaded"]];
  toLineE[O8[a],{u,1,1}]];

toLineE[H3[a_],{1,v,1}]:=Module[{},toLineE[H3[temp1_],{1,v,1}]=.;
  toLineE[H4[temp1_],{1,v,1}]=.;
  toLineE[H5[temp1_],{1,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_1v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 1v1 euclidean lines loaded"]];
  toLineE[H3[a],{1,v,1}]];
toLineE[H4[a_],{1,v,1}]:=Module[{},toLineE[H3[temp1_],{1,v,1}]=.;
  toLineE[H4[temp1_],{1,v,1}]=.;
  toLineE[H5[temp1_],{1,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_1v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 1v1 euclidean lines loaded"]];
  toLineE[H4[a],{1,v,1}]];
toLineE[H5[a_],{1,v,1}]:=Module[{},toLineE[H3[temp1_],{1,v,1}]=.;
  toLineE[H4[temp1_],{1,v,1}]=.;
  toLineE[H5[temp1_],{1,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_1v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 1v1 euclidean lines loaded"]];
  toLineE[H5[a],{1,v,1}]];
toLineE[H6[a_],{1,v,1}]:=Module[{},toLineE[H6[temp1_],{1,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_1v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 1v1 euclidean lines loaded"]];
  toLineE[H6[a],{1,v,1}]];
toLineE[E7[a_],{1,v,1}]:=Module[{},toLineE[E7[temp1_],{1,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_1v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even 1v1 euclidean lines loaded"]];
  toLineE[E7[a],{1,v,1}]];
toLineE[O7[a_],{1,v,1}]:=Module[{},toLineE[O7[temp1_],{1,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_odd_euclidean_1v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 odd 1v1 euclidean lines loaded"]];
  toLineE[O7[a],{1,v,1}]];
toLineE[E8[a_],{1,v,1}]:=Module[{},toLineE[E8[temp1_],{1,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_1v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even 1v1 euclidean lines loaded"]];
  toLineE[E8[a],{1,v,1}]];
toLineE[O8[a_],{1,v,1}]:=Module[{},toLineE[O8[temp1_],{1,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_odd_euclidean_1v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 odd 1v1 euclidean lines loaded"]];
  toLineE[O8[a],{1,v,1}]];

toLineE[H3[a_],{1,1,w}]:=Module[{},toLineE[H3[temp1_],{1,1,w}]=.;
  toLineE[H4[temp1_],{1,1,w}]=.;
  toLineE[H5[temp1_],{1,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_11w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 11w euclidean lines loaded"]];
  toLineE[H3[a],{1,1,w}]];
toLineE[H4[a_],{1,1,w}]:=Module[{},toLineE[H3[temp1_],{1,1,w}]=.;
  toLineE[H4[temp1_],{1,1,w}]=.;
  toLineE[H5[temp1_],{1,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_11w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 11w euclidean lines loaded"]];
  toLineE[H4[a],{1,1,w}]];
toLineE[H5[a_],{1,1,w}]:=Module[{},toLineE[H3[temp1_],{1,1,w}]=.;
  toLineE[H4[temp1_],{1,1,w}]=.;
  toLineE[H5[temp1_],{1,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_11w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 11w euclidean lines loaded"]];
  toLineE[H5[a],{1,1,w}]];
toLineE[H6[a_],{1,1,w}]:=Module[{},toLineE[H6[temp1_],{1,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_11w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 11w euclidean lines loaded"]];
  toLineE[H6[a],{1,1,w}]];
toLineE[E7[a_],{1,1,w}]:=Module[{},toLineE[E7[temp1_],{1,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_11w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even 11w euclidean lines loaded"]];
  toLineE[E7[a],{1,1,w}]];
toLineE[O7[a_],{1,1,w}]:=Module[{},toLineE[O7[temp1_],{1,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_odd_euclidean_11w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 odd 11w euclidean lines loaded"]];
  toLineE[O7[a],{1,1,w}]];
toLineE[E8[a_],{1,1,w}]:=Module[{},toLineE[E8[temp1_],{1,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_11w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even 11w euclidean lines loaded"]];
  toLineE[E8[a],{1,1,w}]];
toLineE[O8[a_],{1,1,w}]:=Module[{},toLineE[O8[temp1_],{1,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_odd_euclidean_11w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 odd 11w euclidean lines loaded"]];
  toLineE[O8[a],{1,1,w}]];

toLineE[H3[a_],{u,u,1}]:=Module[{},toLineE[H3[temp1_],{u,u,1}]=.;
  toLineE[H4[temp1_],{u,u,1}]=.;
  toLineE[H5[temp1_],{u,u,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_uu1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 uu1 euclidean lines loaded"]];
  toLineE[H3[a],{u,u,1}]];
toLineE[H4[a_],{u,u,1}]:=Module[{},toLineE[H3[temp1_],{u,u,1}]=.;
  toLineE[H4[temp1_],{u,u,1}]=.;
  toLineE[H5[temp1_],{u,u,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_uu1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 uu1 euclidean lines loaded"]];
  toLineE[H4[a],{u,u,1}]];
toLineE[H5[a_],{u,u,1}]:=Module[{},toLineE[H3[temp1_],{u,u,1}]=.;
  toLineE[H4[temp1_],{u,u,1}]=.;
  toLineE[H5[temp1_],{u,u,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_uu1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 uu1 euclidean lines loaded"]];
  toLineE[H5[a],{u,u,1}]];
toLineE[H6[a_],{u,u,1}]:=Module[{},toLineE[H6[temp1_],{u,u,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_uu1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 uu1 euclidean lines loaded"]];
  toLineE[H6[a],{u,u,1}]];
toLineE[E7[a_],{u,u,1}]:=Module[{},toLineE[E7[temp1_],{u,u,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_uu1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even uu1 euclidean lines loaded"]];
  toLineE[E7[a],{u,u,1}]];
toLineE[E8[a_],{u,u,1}]:=Module[{},toLineE[E8[temp1_],{u,u,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_uu1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even uu1 euclidean lines loaded"]];
  toLineE[E8[a],{u,u,1}]];
toLineE[O7[_],{u,u,1}]:=0;
toLineE[O8[_],{u,u,1}]:=0;

toLineE[H3[a_],{1,v,v}]:=Module[{},toLineE[H3[temp1_],{1,v,v}]=.;
  toLineE[H4[temp1_],{1,v,v}]=.;
  toLineE[H5[temp1_],{1,v,v}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_1vv_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 1vv euclidean lines loaded"]];
  toLineE[H3[a],{1,v,v}]];
toLineE[H4[a_],{1,v,v}]:=Module[{},toLineE[H3[temp1_],{1,v,v}]=.;
  toLineE[H4[temp1_],{1,v,v}]=.;
  toLineE[H5[temp1_],{1,v,v}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_1vv_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 1vv euclidean lines loaded"]];
  toLineE[H4[a],{1,v,v}]];
toLineE[H5[a_],{1,v,v}]:=Module[{},toLineE[H3[temp1_],{1,v,v}]=.;
  toLineE[H4[temp1_],{1,v,v}]=.;
  toLineE[H5[temp1_],{1,v,v}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_1vv_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 1vv euclidean lines loaded"]];
  toLineE[H5[a],{1,v,v}]];
toLineE[H6[a_],{1,v,v}]:=Module[{},toLineE[H6[temp1_],{1,v,v}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_1vv_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 1vv euclidean lines loaded"]];
  toLineE[H6[a],{1,v,v}]];
toLineE[E7[a_],{1,v,v}]:=Module[{},toLineE[E7[temp1_],{1,v,v}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_1vv_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even 1vv euclidean lines loaded"]];
  toLineE[E7[a],{1,v,v}]];
toLineE[E8[a_],{1,v,v}]:=Module[{},toLineE[E8[temp1_],{1,v,v}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_1vv_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even 1vv euclidean lines loaded"]];
  toLineE[E8[a],{1,v,v}]];
toLineE[O7[_],{1,v,v}]:=0;
toLineE[O8[_],{1,v,v}]:=0;

toLineE[H3[a_],{w,1,w}]:=Module[{},toLineE[H3[temp1_],{w,1,w}]=.;
  toLineE[H4[temp1_],{w,1,w}]=.;
  toLineE[H5[temp1_],{w,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_w1w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 w1w euclidean lines loaded"]];
  toLineE[H3[a],{w,1,w}]];
toLineE[H4[a_],{w,1,w}]:=Module[{},toLineE[H3[temp1_],{w,1,w}]=.;
  toLineE[H4[temp1_],{w,1,w}]=.;
  toLineE[H5[temp1_],{w,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_w1w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 w1w euclidean lines loaded"]];
  toLineE[H4[a],{w,1,w}]];
toLineE[H5[a_],{w,1,w}]:=Module[{},toLineE[H3[temp1_],{w,1,w}]=.;
  toLineE[H4[temp1_],{w,1,w}]=.;
  toLineE[H5[temp1_],{w,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_w1w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 w1w euclidean lines loaded"]];
  toLineE[H5[a],{w,1,w}]];
toLineE[H6[a_],{w,1,w}]:=Module[{},toLineE[H6[temp1_],{w,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_w1w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 w1w euclidean lines loaded"]];
  toLineE[H6[a],{w,1,w}]];
toLineE[E7[a_],{w,1,w}]:=Module[{},toLineE[E7[temp1_],{w,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_w1w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even w1w euclidean lines loaded"]];
  toLineE[E7[a],{w,1,w}]];
toLineE[E8[a_],{w,1,w}]:=Module[{},toLineE[E8[temp1_],{w,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_w1w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even w1w euclidean lines loaded"]];
  toLineE[E8[a],{w,1,w}]];
toLineE[O7[_],{w,1,w}]:=0;
toLineE[O8[_],{w,1,w}]:=0;

toLineE[H3[a_],{u,0,1}]:=Module[{},toLineE[H3[temp1_],{u,0,1}]=.;
  toLineE[H4[temp1_],{u,0,1}]=.;
  toLineE[H5[temp1_],{u,0,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_u01_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 u01 euclidean lines loaded"]];
  toLineE[H3[a],{u,0,1}]];
toLineE[H4[a_],{u,0,1}]:=Module[{},toLineE[H3[temp1_],{u,0,1}]=.;
  toLineE[H4[temp1_],{u,0,1}]=.;
  toLineE[H5[temp1_],{u,0,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_u01_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 u01 euclidean lines loaded"]];
  toLineE[H4[a],{u,0,1}]];
toLineE[H5[a_],{u,0,1}]:=Module[{},toLineE[H3[temp1_],{u,0,1}]=.;
  toLineE[H4[temp1_],{u,0,1}]=.;
  toLineE[H5[temp1_],{u,0,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_u01_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 u01 euclidean lines loaded"]];
  toLineE[H5[a],{u,0,1}]];
toLineE[H6[a_],{u,0,1}]:=Module[{},toLineE[H6[temp1_],{u,0,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_u01_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 u01 euclidean lines loaded"]];
  toLineE[H6[a],{u,0,1}]];
toLineE[E7[a_],{u,0,1}]:=Module[{},toLineE[E7[temp1_],{u,0,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_u01_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even u01 euclidean lines loaded"]];
  toLineE[E7[a],{u,0,1}]];
toLineE[O7[a_],{u,0,1}]:=Module[{},toLineE[O7[temp1_],{u,0,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_odd_euclidean_u01_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 odd u01 euclidean lines loaded"]];
  toLineE[O7[a],{u,0,1}]];
toLineE[E8[a_],{u,0,1}]:=Module[{},toLineE[E8[temp1_],{u,0,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_u01_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even u01 euclidean lines loaded"]];
  toLineE[E8[a],{u,0,1}]];
toLineE[O8[a_],{u,0,1}]:=Module[{},toLineE[O8[temp1_],{u,0,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_odd_euclidean_u01_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 odd u01 euclidean lines loaded"]];
  toLineE[O8[a],{u,0,1}]];

toLineE[H3[a_],{1,v,0}]:=Module[{},toLineE[H3[temp1_],{1,v,0}]=.;
  toLineE[H4[temp1_],{1,v,0}]=.;
  toLineE[H5[temp1_],{1,v,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_1v0_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 1v0 euclidean lines loaded"]];
  toLineE[H3[a],{1,v,0}]];
toLineE[H4[a_],{1,v,0}]:=Module[{},toLineE[H3[temp1_],{1,v,0}]=.;
  toLineE[H4[temp1_],{1,v,0}]=.;
  toLineE[H5[temp1_],{1,v,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_1v0_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 1v0 euclidean lines loaded"]];
  toLineE[H4[a],{1,v,0}]];
toLineE[H5[a_],{1,v,0}]:=Module[{},toLineE[H3[temp1_],{1,v,0}]=.;
  toLineE[H4[temp1_],{1,v,0}]=.;
  toLineE[H5[temp1_],{1,v,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_1v0_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 1v0 euclidean lines loaded"]];
  toLineE[H5[a],{1,v,0}]];
toLineE[H6[a_],{1,v,0}]:=Module[{},toLineE[H6[temp1_],{1,v,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_1v0_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 1v0 euclidean lines loaded"]];
  toLineE[H6[a],{1,v,0}]];
toLineE[E7[a_],{1,v,0}]:=Module[{},toLineE[E7[temp1_],{1,v,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_1v0_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even 1v0 euclidean lines loaded"]];
  toLineE[E7[a],{1,v,0}]];
toLineE[O7[a_],{1,v,0}]:=Module[{},toLineE[O7[temp1_],{1,v,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_odd_euclidean_1v0_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 odd 1v0 euclidean lines loaded"]];
  toLineE[O7[a],{1,v,0}]];
toLineE[E8[a_],{1,v,0}]:=Module[{},toLineE[E8[temp1_],{1,v,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_1v0_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even 1v0 euclidean lines loaded"]];
  toLineE[E8[a],{1,v,0}]];
toLineE[O8[a_],{1,v,0}]:=Module[{},toLineE[O8[temp1_],{1,v,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_odd_euclidean_1v0_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 odd 1v0 euclidean lines loaded"]];
  toLineE[O8[a],{1,v,0}]];

toLineE[H3[a_],{0,1,w}]:=Module[{},toLineE[H3[temp1_],{0,1,w}]=.;
  toLineE[H4[temp1_],{0,1,w}]=.;
  toLineE[H5[temp1_],{0,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_01w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 01w euclidean lines loaded"]];
  toLineE[H3[a],{0,1,w}]];
toLineE[H4[a_],{0,1,w}]:=Module[{},toLineE[H3[temp1_],{0,1,w}]=.;
  toLineE[H4[temp1_],{0,1,w}]=.;
  toLineE[H5[temp1_],{0,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_01w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 01w euclidean lines loaded"]];
  toLineE[H4[a],{0,1,w}]];
toLineE[H5[a_],{0,1,w}]:=Module[{},toLineE[H3[temp1_],{0,1,w}]=.;
  toLineE[H4[temp1_],{0,1,w}]=.;
  toLineE[H5[temp1_],{0,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_01w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 01w euclidean lines loaded"]];
  toLineE[H5[a],{0,1,w}]];
toLineE[H6[a_],{0,1,w}]:=Module[{},toLineE[H6[temp1_],{0,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_01w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 01w euclidean lines loaded"]];
  toLineE[H6[a],{0,1,w}]];
toLineE[E7[a_],{0,1,w}]:=Module[{},toLineE[E7[temp1_],{0,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_01w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even 01w euclidean lines loaded"]];
  toLineE[E7[a],{0,1,w}]];
toLineE[O7[a_],{0,1,w}]:=Module[{},toLineE[O7[temp1_],{0,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_odd_euclidean_01w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 odd 01w euclidean lines loaded"]];
  toLineE[O7[a],{0,1,w}]];
toLineE[E8[a_],{0,1,w}]:=Module[{},toLineE[E8[temp1_],{0,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_01w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even 01w euclidean lines loaded"]];
  toLineE[E8[a],{0,1,w}]];
toLineE[O8[a_],{0,1,w}]:=Module[{},toLineE[O8[temp1_],{0,1,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_odd_euclidean_01w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 odd 01w euclidean lines loaded"]];
  toLineE[O8[a],{0,1,w}]];

toLineE[H3[a_],{u,1,0}]:=Module[{},toLineE[H3[temp1_],{u,1,0}]=.;
  toLineE[H4[temp1_],{u,1,0}]=.;
  toLineE[H5[temp1_],{u,1,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_u10_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 u10 euclidean lines loaded"]];
  toLineE[H3[a],{u,1,0}]];
toLineE[H4[a_],{u,1,0}]:=Module[{},toLineE[H3[temp1_],{u,1,0}]=.;
  toLineE[H4[temp1_],{u,1,0}]=.;
  toLineE[H5[temp1_],{u,1,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_u10_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 u10 euclidean lines loaded"]];
  toLineE[H4[a],{u,1,0}]];
toLineE[H5[a_],{u,1,0}]:=Module[{},toLineE[H3[temp1_],{u,1,0}]=.;
  toLineE[H4[temp1_],{u,1,0}]=.;
  toLineE[H5[temp1_],{u,1,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_u10_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 u10 euclidean lines loaded"]];
  toLineE[H5[a],{u,1,0}]];
toLineE[H6[a_],{u,1,0}]:=Module[{},toLineE[H6[temp1_],{u,1,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_u10_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 u10 euclidean lines loaded"]];
  toLineE[H6[a],{u,1,0}]];
toLineE[E7[a_],{u,1,0}]:=Module[{},toLineE[E7[temp1_],{u,1,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_u10_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even u10 euclidean lines loaded"]];
  toLineE[E7[a],{u,1,0}]];
toLineE[O7[a_],{u,1,0}]:=Module[{},toLineE[O7[temp1_],{u,1,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_odd_euclidean_u10_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 odd u10 euclidean lines loaded"]];
  toLineE[O7[a],{u,1,0}]];
toLineE[E8[a_],{u,1,0}]:=Module[{},toLineE[E8[temp1_],{u,1,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_u10_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even u10 euclidean lines loaded"]];
  toLineE[E8[a],{u,1,0}]];
toLineE[O8[a_],{u,1,0}]:=Module[{},toLineE[O8[temp1_],{u,1,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_odd_euclidean_u10_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 odd u10 euclidean lines loaded"]];
  toLineE[O8[a],{u,1,0}]];

toLineE[H3[a_],{0,v,1}]:=Module[{},toLineE[H3[temp1_],{0,v,1}]=.;
  toLineE[H4[temp1_],{0,v,1}]=.;
  toLineE[H5[temp1_],{0,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_0v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 {0,v,1} euclidean lines loaded"]];
  toLineE[H3[a],{0,v,1}]];
toLineE[H4[a_],{0,v,1}]:=Module[{},toLineE[H3[temp1_],{0,v,1}]=.;
  toLineE[H4[temp1_],{0,v,1}]=.;
  toLineE[H5[temp1_],{0,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_0v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 {0,v,1} euclidean lines loaded"]];
  toLineE[H4[a],{0,v,1}]];
toLineE[H5[a_],{0,v,1}]:=Module[{},toLineE[H3[temp1_],{0,v,1}]=.;
  toLineE[H4[temp1_],{0,v,1}]=.;
  toLineE[H5[temp1_],{0,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_0v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 {0,v,1} euclidean lines loaded"]];
  toLineE[H5[a],{0,v,1}]];
toLineE[H6[a_],{0,v,1}]:=Module[{},toLineE[H6[temp1_],{0,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_0v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 {0,v,1} euclidean lines loaded"]];
  toLineE[H6[a],{0,v,1}]];
toLineE[E7[a_],{0,v,1}]:=Module[{},toLineE[E7[temp1_],{0,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_0v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even {0,v,1} euclidean lines loaded"]];
  toLineE[E7[a],{0,v,1}]];
toLineE[O7[a_],{0,v,1}]:=Module[{},toLineE[O7[temp1_],{0,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_odd_euclidean_0v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 odd {0,v,1} euclidean lines loaded"]];
  toLineE[O7[a],{0,v,1}]];
toLineE[E8[a_],{0,v,1}]:=Module[{},toLineE[E8[temp1_],{0,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_0v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even {0,v,1} euclidean lines loaded"]];
  toLineE[E8[a],{0,v,1}]];
toLineE[O8[a_],{0,v,1}]:=Module[{},toLineE[O8[temp1_],{0,v,1}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_odd_euclidean_0v1_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 odd {0,v,1} euclidean lines loaded"]];
  toLineE[O8[a],{0,v,1}]];

toLineE[H3[a_],{1,0,w}]:=Module[{},toLineE[H3[temp1_],{1,0,w}]=.;
  toLineE[H4[temp1_],{1,0,w}]=.;
  toLineE[H5[temp1_],{1,0,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_10w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 10w euclidean lines loaded"]];
  toLineE[H3[a],{1,0,w}]];
toLineE[H4[a_],{1,0,w}]:=Module[{},toLineE[H3[temp1_],{1,0,w}]=.;
  toLineE[H4[temp1_],{1,0,w}]=.;
  toLineE[H5[temp1_],{1,0,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_10w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 10w euclidean lines loaded"]];
  toLineE[H4[a],{1,0,w}]];
toLineE[H5[a_],{1,0,w}]:=Module[{},toLineE[H3[temp1_],{1,0,w}]=.;
  toLineE[H4[temp1_],{1,0,w}]=.;
  toLineE[H5[temp1_],{1,0,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_10w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 10w euclidean lines loaded"]];
  toLineE[H5[a],{1,0,w}]];
toLineE[H6[a_],{1,0,w}]:=Module[{},toLineE[H6[temp1_],{1,0,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_10w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 10w euclidean lines loaded"]];
  toLineE[H6[a],{1,0,w}]];
toLineE[E7[a_],{1,0,w}]:=Module[{},toLineE[E7[temp1_],{1,0,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_10w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even 10w euclidean lines loaded"]];
  toLineE[E7[a],{1,0,w}]];
toLineE[O7[a_],{1,0,w}]:=Module[{},toLineE[O7[temp1_],{1,0,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_odd_euclidean_10w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 odd 10w euclidean lines loaded"]];
  toLineE[O7[a],{1,0,w}]];
toLineE[E8[a_],{1,0,w}]:=Module[{},toLineE[E8[temp1_],{1,0,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_10w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even 10w euclidean lines loaded"]];
  toLineE[E8[a],{1,0,w}]];
toLineE[O8[a_],{1,0,w}]:=Module[{},toLineE[O8[temp1_],{1,0,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_odd_euclidean_10w_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 odd 10w euclidean lines loaded"]];
  toLineE[O8[a],{1,0,w}]];

toLineE[H3[a_],{u,0,1-u}]:=Module[{},toLineE[H3[temp1_],{u,0,1-u}]=.;
  toLineE[H4[temp1_],{u,0,1-u}]=.;
  toLineE[H5[temp1_],{u,0,1-u}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_u0omu_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 u0omu euclidean lines loaded"]];
  toLineE[H3[a],{u,0,1-u}]];
toLineE[H4[a_],{u,0,1-u}]:=Module[{},toLineE[H3[temp1_],{u,0,1-u}]=.;
  toLineE[H4[temp1_],{u,0,1-u}]=.;
  toLineE[H5[temp1_],{u,0,1-u}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_u0omu_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 u0omu euclidean lines loaded"]];
  toLineE[H4[a],{u,0,1-u}]];
toLineE[H5[a_],{u,0,1-u}]:=Module[{},toLineE[H3[temp1_],{u,0,1-u}]=.;
  toLineE[H4[temp1_],{u,0,1-u}]=.;
  toLineE[H5[temp1_],{u,0,1-u}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_u0omu_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 u0omu euclidean lines loaded"]];
  toLineE[H5[a],{u,0,1-u}]];
toLineE[H6[a_],{u,0,1-u}]:=Module[{},toLineE[H6[temp1_],{u,0,1-u}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_u0omu_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 u0omu euclidean lines loaded"]];
  toLineE[H6[a],{u,0,1-u}]];
toLineE[E7[a_],{u,0,1-u}]:=Module[{},toLineE[E7[temp1_],{u,0,1-u}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_u0omu_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even u0omu euclidean lines loaded"]];
  toLineE[E7[a],{u,0,1-u}]];
toLineE[E8[a_],{u,0,1-u}]:=Module[{},toLineE[E8[temp1_],{u,0,1-u}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_u0omu_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even u0omu euclidean lines loaded"]];
  toLineE[E8[a],{u,0,1-u}]];
toLineE[O7[_],{u,0,1-u}]:=0;
toLineE[O8[_],{u,0,1-u}]:=0;

toLineE[H3[a_],{1-v,v,0}]:=Module[{},toLineE[H3[temp1_],{1-v,v,0}]=.;
  toLineE[H4[temp1_],{1-v,v,0}]=.;
  toLineE[H5[temp1_],{1-v,v,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_omvv0_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 omvv0 euclidean lines loaded"]];
  toLineE[H3[a],{1-v,v,0}]];
toLineE[H4[a_],{1-v,v,0}]:=Module[{},toLineE[H3[temp1_],{1-v,v,0}]=.;
  toLineE[H4[temp1_],{1-v,v,0}]=.;
  toLineE[H5[temp1_],{1-v,v,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_omvv0_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 omvv0 euclidean lines loaded"]];
  toLineE[H4[a],{1-v,v,0}]];
toLineE[H5[a_],{1-v,v,0}]:=Module[{},toLineE[H3[temp1_],{1-v,v,0}]=.;
  toLineE[H4[temp1_],{1-v,v,0}]=.;
  toLineE[H5[temp1_],{1-v,v,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_omvv0_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 omvv0 euclidean lines loaded"]];
  toLineE[H5[a],{1-v,v,0}]];
toLineE[H6[a_],{1-v,v,0}]:=Module[{},toLineE[H6[temp1_],{1-v,v,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_omvv0_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 omvv0 euclidean lines loaded"]];
  toLineE[H6[a],{1-v,v,0}]];
toLineE[E7[a_],{1-v,v,0}]:=Module[{},toLineE[E7[temp1_],{1-v,v,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_omvv0_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even omvv0 euclidean lines loaded"]];
  toLineE[E7[a],{1-v,v,0}]];
toLineE[E8[a_],{1-v,v,0}]:=Module[{},toLineE[E8[temp1_],{1-v,v,0}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_omvv0_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even omvv0 euclidean lines loaded"]];
  toLineE[E8[a],{1-v,v,0}]];
toLineE[O7[_],{1-v,v,0}]:=0;
toLineE[O8[_],{1-v,v,0}]:=0;

toLineE[H3[a_],{0,1-w,w}]:=Module[{},toLineE[H3[temp1_],{0,1-w,w}]=.;
  toLineE[H4[temp1_],{0,1-w,w}]=.;
  toLineE[H5[temp1_],{0,1-w,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_0omww_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 0omww euclidean lines loaded"]];
  toLineE[H3[a],{0,1-w,w}]];
toLineE[H4[a_],{0,1-w,w}]:=Module[{},toLineE[H3[temp1_],{0,1-w,w}]=.;
  toLineE[H4[temp1_],{0,1-w,w}]=.;
  toLineE[H5[temp1_],{0,1-w,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_0omww_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 0omww euclidean lines loaded"]];
  toLineE[H4[a],{0,1-w,w}]];
toLineE[H5[a_],{0,1-w,w}]:=Module[{},toLineE[H3[temp1_],{0,1-w,w}]=.;
  toLineE[H4[temp1_],{0,1-w,w}]=.;
  toLineE[H5[temp1_],{0,1-w,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_0omww_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 0omww euclidean lines loaded"]];
  toLineE[H5[a],{0,1-w,w}]];
toLineE[H6[a_],{0,1-w,w}]:=Module[{},toLineE[H6[temp1_],{0,1-w,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_0omww_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 0omww euclidean lines loaded"]];
  toLineE[H6[a],{0,1-w,w}]];
toLineE[E7[a_],{0,1-w,w}]:=Module[{},toLineE[E7[temp1_],{0,1-w,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_0omww_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even 0omww euclidean lines loaded"]];
  toLineE[E7[a],{0,1-w,w}]];
toLineE[E8[a_],{0,1-w,w}]:=Module[{},toLineE[E8[temp1_],{0,1-w,w}]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_0omww_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even 0omww euclidean lines loaded"]];
  toLineE[E8[a],{0,1-w,w}]];
toLineE[O7[_],{0,1-w,w}]:=0;
toLineE[O8[_],{0,1-w,w}]:=0;

toSurfaceE[H3[a_],v->0]:=Module[{},toSurfaceE[H3[temp1_],v->0]=.;
  toSurfaceE[H4[temp1_],v->0]=.;
  toSurfaceE[H5[temp1_],v->0]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_double_scaling_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 euclidean double scaling limits loaded"]];
  toSurfaceE[H3[a],v->0]];
toSurfaceE[H4[a_],v->0]:=Module[{},toSurfaceE[H3[temp1_],v->0]=.;
  toSurfaceE[H4[temp1_],v->0]=.;
  toSurfaceE[H5[temp1_],v->0]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_double_scaling_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 euclidean double scaling limits loaded"]];
  toSurfaceE[H4[a],v->0]];
toSurfaceE[H5[a_],v->0]:=Module[{},toSurfaceE[H3[temp1_],v->0]=.;
  toSurfaceE[H4[temp1_],v->0]=.;
  toSurfaceE[H5[temp1_],v->0]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_double_scaling_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 euclidean double scaling limits loaded"]];
  toSurfaceE[H5[a],v->0]];
toSurfaceE[H6[a_],v->0]:=Module[{},toSurfaceE[H6[temp1_],v->0]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_double_scaling_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 euclidean double scaling limits loaded"]];
  toSurfaceE[H6[a],v->0]];
toSurfaceE[E7[a_],v->0]:=Module[{},toSurfaceE[E7[temp1_],v->0]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_double_scaling_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even euclidean double scaling limits loaded"]];
  toSurfaceE[E7[a],v->0]];
toSurfaceE[O7[a_],v->0]:=Module[{},toSurfaceE[O7[temp1_],v->0]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_odd_euclidean_double_scaling_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 odd euclidean double scaling limits loaded"]];
  toSurfaceE[O7[a],v->0]];
toSurfaceE[E8[a_],v->0]:=Module[{},toSurfaceE[E8[temp1_],v->0]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_double_scaling_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even euclidean double scaling limits loaded"]];
  toSurfaceE[E8[a],v->0]];
toSurfaceE[O8[a_],v->0]:=Module[{},toSurfaceE[O8[temp1_],v->0]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_odd_euclidean_double_scaling_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 odd euclidean double scaling limits loaded"]];
  toSurfaceE[O8[a],v->0]];

toSurfaceE[H3[a_],w->1]:=Module[{},toSurfaceE[H3[temp1_],w->1]=.;
  toSurfaceE[H4[temp1_],w->1]=.;
  toSurfaceE[H5[temp1_],w->1]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_spurious_pole_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 euclidean spurious pole limits loaded"]];
  toSurfaceE[H3[a],w->1]];
toSurfaceE[H4[a_],w->1]:=Module[{},toSurfaceE[H3[temp1_],w->1]=.;
  toSurfaceE[H4[temp1_],w->1]=.;
  toSurfaceE[H5[temp1_],w->1]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_spurious_pole_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 euclidean spurious pole limits loaded"]];
  toSurfaceE[H4[a],w->1]];
toSurfaceE[H5[a_],w->1]:=Module[{},toSurfaceE[H3[temp1_],w->1]=.;
  toSurfaceE[H4[temp1_],w->1]=.;
  toSurfaceE[H5[temp1_],w->1]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_euclidean_spurious_pole_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 euclidean spurious pole limits loaded"]];
  toSurfaceE[H5[a],w->1]];
toSurfaceE[H6[a_],w->1]:=Module[{},toSurfaceE[H6[temp1_],w->1]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_euclidean_spurious_pole_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 euclidean spurious pole limits loaded"]];
  toSurfaceE[H6[a],w->1]];
toSurfaceE[E7[a_],w->1]:=Module[{},toSurfaceE[E7[temp1_],w->1]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_even_euclidean_spurious_pole_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 even euclidean spurious pole limits loaded"]];
  toSurfaceE[E7[a],w->1]];
toSurfaceE[O7[a_],w->1]:=Module[{},toSurfaceE[O7[temp1_],w->1]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_odd_euclidean_spurious_pole_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 odd euclidean spurious pole limits loaded"]];
  toSurfaceE[O7[a],w->1]];
toSurfaceE[E8[a_],w->1]:=Module[{},toSurfaceE[E8[temp1_],w->1]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_even_euclidean_spurious_pole_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 even euclidean spurious pole limits loaded"]];
  toSurfaceE[E8[a],w->1]];
toSurfaceE[O8[a_],w->1]:=Module[{},toSurfaceE[O8[temp1_],w->1]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_8_odd_euclidean_spurious_pole_limits_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 8 odd euclidean spurious pole limits loaded"]];
  toSurfaceE[O8[a],w->1]];

toLineM[H3[a_],line_]:=Module[{},toLineM[H3[temp1_],temp2_]=.;
  toLineM[H4[temp1_],temp2_]=.;
  toLineM[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_minkowski_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon minkowski lines loaded"]];
  toLineM[H3[a],line]];
toLineM[H4[a_],line_]:=Module[{},toLineM[H3[temp1_],temp2_]=.;
  toLineM[H4[temp1_],temp2_]=.;
  toLineM[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_minkowski_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon minkowski lines loaded"]];
  toLineM[H4[a],line]];
toLineM[H5[a_],line_]:=Module[{},toLineM[H3[temp1_],temp2_]=.;
  toLineM[H4[temp1_],temp2_]=.;
  toLineM[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_minkowski_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon minkowski lines loaded"]];
  toLineM[H5[a],line]];
toLineM[H6[a_],line_]:=Module[{},toLineM[H6[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_minkowski_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 hexagon minkowski lines loaded"]];
  toLineM[H6[a],line]];
toLineM[E7[a_],line_]:=Module[{},toLineM[E7[temp1_],temp2_]=.;
  toLineM[O7[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_minkowski_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 hexagon minkowski lines loaded"]];
  toLineM[E7[a],line]];
toLineM[O7[a_],line_]:=Module[{},toLineM[E7[temp1_],temp2_]=.;
  toLineM[O7[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_minkowski_lines_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 hexagon minkowski lines loaded"]];
  toLineM[O7[a],line]];

toSurfaceM[H3[a_],line_]:=Module[{},toSurfaceM[H3[temp1_],temp2_]=.;
  toSurfaceM[H4[temp1_],temp2_]=.;
  toSurfaceM[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_minkowski_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon minkowski surfaces loaded"]];
  toSurfaceM[H3[a],line]];
toSurfaceM[H4[a_],line_]:=Module[{},toSurfaceM[H3[temp1_],temp2_]=.;
  toSurfaceM[H4[temp1_],temp2_]=.;
  toSurfaceM[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_minkowski_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon minkowski surfaces loaded"]];
  toSurfaceM[H4[a],line]];
toSurfaceM[H5[a_],line_]:=Module[{},toSurfaceM[H3[temp1_],temp2_]=.;
  toSurfaceM[H4[temp1_],temp2_]=.;
  toSurfaceM[H5[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_5_minkowski_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 5 hexagon minkowski surfaces loaded"]];
  toSurfaceM[H5[a],line]];
toSurfaceM[H6[a_],line_]:=Module[{},toSurfaceM[H6[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_6_minkowski_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 6 hexagon minkowski surfaces loaded"]];
  toSurfaceM[H6[a],line]];
toSurfaceM[E7[a_],line_]:=Module[{},toSurfaceM[E7[temp1_],temp2_]=.;
  toSurfaceM[O7[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_minkowski_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 hexagon minkowski surfaces loaded"]];
  toSurfaceM[E7[a],line]];
toSurfaceM[O7[a_],line_]:=Module[{},toSurfaceM[E7[temp1_],temp2_]=.;
  toSurfaceM[O7[temp1_],temp2_]=.;
  Get[$MathematicaLibrary<>"/Function Library/Hexagon Limits/Local Binaries/weight_7_minkowski_surfaces_"<>ToString[Floor[$VersionNumber]]<>".mx"];
  If[debug,Print["weight 7 hexagon minkowski surfaces loaded"]];
  toSurfaceM[O7[a],line]];

toSurfaceE[func_,v->0]:=Expand[func/.irreducibleHexagonFunctionsToSurfaceE[v->0]/.flipArgument[1-v]/.{HPL[{___,1},v]->0,HPL[{0},v]->Log[v]}];
